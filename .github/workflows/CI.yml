name: Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  pguser: "postgres"
  pghost: "127.0.0.1"
  pgpass: ${{ secrets.PGPASS }}

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    needs: [windows]
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            AISdb/Lib/site-packages
            C:\Users\runneradmin\.cargo
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-cargo-
      
      - uses: ikalnytskyi/action-setup-postgres@v4
        with:
          password: ${{ secrets.PGPASS }}
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          cache: true

      - name: Create Python Virtual Environment and Install Dependencies
        run: |
          python -m venv AISdb
          AISdb\Scripts\activate
          python -m pip install --upgrade pip
          python -m pip install maturin pytest-xdist
          maturin develop --release --extras=test,docs
          python -m pip install --upgrade pytest pytest-dotenv pytest-cov furl hypothesis trustme astor pyopenssl isort pydirectory

      - name: Run Tests
        run: |
          AISdb\Scripts\activate
          pytest ./aisdb/tests/ --ignore=./aisdb/tests/test_014_marinetraffic.py --maxfail=10 --dist=loadscope --numprocesses=auto

      - name: Clean Up
        run: |
          Remove-Item -Recurse -Force AISdb

  build-and-test-linux:
    runs-on: ubuntu-latest
    needs: [linux]
    env:
      POSTGRES_USER: ${{ secrets.PGUSER }}
      POSTGRES_PASSWORD: ${{ secrets.PGPASS }}
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            AISdb/lib/python3.10/site-packages
            ~/.cargo
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-cargo-
      
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Rust Toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          source $HOME/.cargo/env

      - name: Setup PostgreSQL
        run: |
          sudo apt-get update -y
          sudo apt-get install postgresql -y
          sudo systemctl enable postgresql
          sudo systemctl start postgresql
          sudo -u postgres psql postgres -c "ALTER USER postgres WITH PASSWORD '$POSTGRES_PASSWORD';"

      - name: Create Python Virtual Environment and Install Dependencies
        run: |
          python -m venv AISdb
          source ./AISdb/bin/activate
          python -m pip install --upgrade pip
          python -m pip install maturin pytest-xdist
          maturin develop --release --extras=test,docs
          python -m pip install --upgrade pytest pytest-dotenv pytest-cov furl hypothesis trustme astor pyopenssl isort pydirectory

      - name: Run Tests
        run: |
          source ./AISdb/bin/activate
          pytest ./aisdb/tests/ --ignore=./aisdb/tests/test_014_marinetraffic.py --maxfail=10 --dist=loadscope --numprocesses=auto

      - name: Clean Up
        run: |
          rm -rf AISdb
          sudo apt-get clean

  build-and-test-macos:
    runs-on: macos-latest
    needs: [macos]
    env:
      POSTGRES_USER: ${{ secrets.PGUSER }}
      POSTGRES_PASSWORD: ${{ secrets.PGPASS }}
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            AISdb/lib/python3.10/site-packages
            ~/.cargo
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-cargo-
      
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Rust Toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          source $HOME/.cargo/env

      - name: Install PostgreSQL
        run: |
          brew install postgresql@14
          brew services start postgresql@14
          brew link postgresql@14 --force
          brew cleanup

      - name: Configure PostgreSQL
        run: |
          psql postgres -c "CREATE ROLE postgres WITH LOGIN SUPERUSER PASSWORD '${{ env.POSTGRES_PASSWORD }}';"

      - name: Create Python Virtual Environment and Install Dependencies
        run: |
          python -m venv AISdb
          source ./AISdb/bin/activate
          python -m pip install --upgrade pip
          python -m pip install maturin pytest-xdist
          maturin develop --release --extras=test,docs
          python -m pip install --upgrade pytest pytest-dotenv pytest-cov furl hypothesis trustme astor pyopenssl isort pydirectory

      - name: Run Tests
        run: |
          source ./AISdb/bin/activate
          pytest ./aisdb/tests/ --ignore=./aisdb/tests/test_014_marinetraffic.py --maxfail=10 --dist=loadscope --numprocesses=auto

      - name: Clean Up
        run: |
          rm -rf AISdb
