#!/usr/bin/python
'''
Automates changelog updates when a commit is added.
Copy this file to .git/hooks/ to add commit messages to the changelog.
'''

import os
import subprocess

from packaging import version


projdir = subprocess.check_output(
            'git rev-parse --show-toplevel'.split()
            ).decode().strip()

# read commit message
commitmessagefile = os.path.join('.git', 'COMMIT_EDITMSG')
with open(commitmessagefile, 'r') as f:
    commitmessage = f.read().strip()

# update changelog with message from commit
changelogpath = os.path.join(projdir, 'changelog.rst')
if os.path.isfile(changelogpath):
    with open(changelogpath, 'r') as f:
        log = f.readlines()[3:]
else:
    log = []

# check if hook was called recursively
if log[4].strip() == commitmessage.strip():
    print('exiting recursive call to "git commit"')
    exit(0)

# parse version file
versionfilepath = os.path.join(projdir, 'aisdb', 'version.py')
with open(versionfilepath, 'r') as f:
    exec(f.read())
    bumped = version.Version(__version__)


header = '''
Changelog
=========
'''

changes = f'''
v{bumped}
-------

{commitmessage}

'''

newchangelog = header + changes + ''.join(log)

# update changelog.rst
with open(changelogpath, 'w') as f:
    f.write(newchangelog)

# add the new version file to commit
cmd = 'git add changelog.rst'.split()
subprocess.run(cmd, check=True)

cmd2 = 'git commit --amend --no-edit'.split()
subprocess.run(cmd2, check=True)
