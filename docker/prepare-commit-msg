#!/usr/bin/python

import os
import subprocess

from packaging import version

import aisdb

# parse package version
v = version.Version(aisdb.__version__)
vstring = f'{v.major}.{v.minor}.{v.micro}'

projdir = subprocess.check_output(
            'git rev-parse --show-toplevel'.split()
            ).decode().rstrip()

# parse commit message
commitmessagefile = os.path.join(projdir, '.git', 'COMMIT_EDITMSG')
with open(commitmessagefile, 'r') as f:
    commitmessage = f.read()

# update changelog
changelogpath = os.path.join(projdir, 'changelog.rst')
if os.path.isfile(changelogpath):
    with open(changelogpath, 'r') as f:
        log = f.readlines()[3:]
else:
    log = []

header = '''
Changelog
=========
'''

changes = f'''
v{vstring}
------

{commitmessage}

'''

newchangelog = header + changes + ''.join(log)

with open(changelogpath, 'w') as f:
    f.write(newchangelog)


'''
if 'version:major' in commitmessage.lower():
    vstring = f'{v.major+1}.0.0'
elif 'version:minor' in commitmessage.lower():
    vstring = f'{v.major}.{v.minor+1}.0'
else:
    vstring = f'{v.major}.{v.minor}.{v.micro+1}'
'''
