version: '3.9'

services:
  # compile rust and run rust tests
  rust-test:
    container_name: rust-test
    environment:
      - RUST_BACKTRACE=1
    build:
      target: build_rust
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      - RUST_BACKTRACE=1
    networks:
      ipv6_private:
        ipv6_address: "fc00::4"
    command:
      ["cargo", "test", "--manifest-path=aisdb_rust/Cargo.toml", "--color=always"]

  # build python package and run python tests
  python-test:
    container_name: python-test
    build:
      target: build_python
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      - RUST_BACKTRACE=1
    networks:
      ipv6_private:
        ipv6_address: "fc00::5"
    command:
      ["python", "-m", "pytest", "--color=yes", "--tb=native", "tests/"]

  # proxy router
  nginx:
    image: nginx:latest
    container_name: nginx
    environment: 
      AISDBHOST: ${AISDBHOST:-127.0.0.1}
      AISDBPORT: ${AISDBPORT:-9924}
      USEPROXYSERVERNAME: ${USEPROXYSERVERNAME:-off}
    ports:
     - "80:80"
     - "443:443"
     - "${AISDBPORT:-9924}:${AISDBPORT:-9924}"
    networks:
      ipv6_private:
        ipv6_address: "fc00::2"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/templates/nginx.conf.template:ro
      # - ~/cert/conf:/etc/letsencrypt
    command:
      ["/bin/sh" , "-c" , "envsubst '$${AISDBHOST} $${AISDBPORT} $${USEPROXYSERVERNAME}' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;' -c /etc/nginx/nginx.conf"]


  # nodeJS docs server + webapp
  webserver:
    container_name: webserver
    build: 
      target: webserv
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BINGMAPSKEY: ${BINGMAPSKEY:-"Your Bing Maps Key from https://www.bingmapsportal.com/ here"}
        AISDBHOST: ${AISDBHOST:-127.0.0.1}
        AISDBPORT: ${AISDBPORT:-9924}
    command:
      ['npm', '--prefix', 'aisdb_web/', 'start']
    depends_on:
      - nginx
    networks:
      ipv6_private:
        ipv6_address: "fc00::3"

  # database server
  websocket:
    container_name: websocket
    build:
      target: build_python
      #target: aisdb_python_root
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      AISDBHOST: ${AISDBHOST:-127.0.0.1}
      AISDBHOSTALLOW: ${AISDBHOSTALLOW:-*}
      AISDBPORT: ${AISDBPORT:-9924}
    command:
      ['python', '-Ou', 'aisdb/websocket_server.py']
    depends_on:
      - nginx
    networks: 
      ipv6_private:
        ipv6_address: "fc00::6"

  # https://eff-certbot.readthedocs.io/en/stable/using.html#where-are-my-certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    #volumes:
    #  - ~/cert/conf:/etc/letsencrypt
    networks:
      ipv6_private:
        ipv6_address: "fc00::7"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  ipv6_private:
    name: ipv6_private
    enable_ipv6: true
    ipam:
      config:
        - subnet: "fc00:0:0::/119"
          gateway: "fc00:0:0::1"

