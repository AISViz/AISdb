version: '3.9'

services:
  # compile rust and run rust tests
  rust-test:
    container_name: rust-test
    environment:
      - RUST_BACKTRACE=1
    build:
      target: build_rust
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      - RUST_BACKTRACE=1
    networks:
      ipv6_private:
        ipv6_address: "fc00::4"
    command:
      ["cargo", "test", "--manifest-path=aisdb_rust/Cargo.toml", "--color=always"]

  # build python package and run python tests
  python-test:
    container_name: python-test
    build:
      target: build_python
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      - RUST_BACKTRACE=1
    networks:
      ipv6_private:
        ipv6_address: "fc00::5"
    command:
      ["python", "-m", "pytest", "--color=yes", "--tb=native", "-k", "not merge", "tests/"]

  # proxy router
  nginx:
    image: nginx:latest
    container_name: nginx
    environment: 
      AISDBHOST: ${AISDBHOST:-127.0.0.1}
      AISDBPORT: ${AISDBPORT:-9924}
    ports:
     - "80:80"
     - "443:443"
     - "${AISDBPORT:-9924}:${AISDBPORT:-9924}"
    networks:
      ipv6_private:
        ipv6_address: "fc00::2"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/templates/nginx.conf.template:ro
      # - ./nginx/certbot/conf:/etc/letsencrypt
      # - ./nginx/certbot/www:/var/www/certbot
    command:
      ["/bin/sh" , "-c" , "envsubst '$${AISDBHOST} $${AISDBPORT}' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;' -c /etc/nginx/nginx.conf"]


  # nodeJS docs server + webapp
  webserver:
    container_name: webserver
    build: 
      target: webserv
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BINGMAPSKEY: ${BINGMAPSKEY:-"Your Bing Maps Key from https://www.bingmapsportal.com/ here"}
        AISDBHOST: ${AISDBHOST:-127.0.0.1}
        AISDBPORT: ${AISDBPORT:-9924}
    command:
      ['npm', '--prefix', 'aisdb_web/', 'start']
    #expose:
    #  - "8080"
    depends_on:
      - nginx
      #- certbot
    networks:
      ipv6_private:
        ipv6_address: "fc00::3"

  # database server
  websocket:
    container_name: websocket
    build:
      target: build_python
      context: .
      dockerfile: ./docker/Dockerfile
    environment:
      AISDBHOSTALLOW: ${AISDBHOSTALLOW:-*}
      AISDBPORT: ${AISDBPORT:-9924}
    command:
      ['python', 'aisdb/websocket_server.py']
    depends_on:
      - nginx
    networks: 
      ipv6_private:
        ipv6_address: "fc00::6"
    #expose:
    #  - "9924"
    #deploy:
    #  replicas: 8
    #  resources:
    #    limits:
    #      cpus: '1'
    #      memory: '3072M'
    #  restart_policy:
    #    condition: on-failure
    #    delay: 5s
    #    max_attempts: 3
    #    window: 120s

  #certbot:
  #image: certbot/certbot
  #container_name: aisdb_certbot
  #volumes:
  #  - ./nginx/certbot/conf:/etc/letsencrypt
  #  - ./nginx/certbot/www:/var/www/certbot
  #networks:
  #  ipv6_private:
  #    ipv6_address: "fc00::4"


networks:
  ipv6_private:
    name: ipv6_private
    enable_ipv6: true
    ipam:
      config:
        - subnet: "fc00:0:0::/119"
          gateway: "fc00:0:0::1"

