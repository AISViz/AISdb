image: meridiancfi/aisdb:latest

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
  - pkgbuild
  - rust-test
  - python-test
  - build-website
  - publish

pkgbuild:
  image: 
    name: ghcr.io/pyo3/maturin:main
    entrypoint: [""]
  stage: pkgbuild
  script:
    - maturin build --release --manylinux 2014 --strip --interpreter 3.8 3.9 3.10
  artifacts:
    paths:
      - ./target/wheels/

rust-test:
  stage: rust-test
  script:
    - cargo test --color=always --release --lib
  artifacts:
    paths:
      - ./testdata/*

python-test:
  stage: python-test
  script:
    - python -m venv env
    - source env/bin/activate && python -m pip install --upgrade pip maturin
    - source env/bin/activate && maturin develop --release --extras=test,docs
    - mkdir -p data_dir
    - source env/bin/activate && AISDBDATADIR=data_dir python -m pytest aisdb/tests/ --durations=5 -s -k 'not marinetraffic and not bathy and not ShoreDist and not PortDist and not raster'
  coverage: '/TOTAL.*\s+(\d+\%)/'
  dependencies:
    - rust-test
  cache:
    key: persistent_000
    paths:
      - ./env
      - ./data_dir
      - ./testdata/
  artifacts:
    paths:
      - ./aisdb_web/dist_coverage/
      - .coverage

build-website:
  stage: build-website
  only: 
    - master
  dependencies:
    - python-test
  script:
    - python -m venv env
    - source env/bin/activate && python -m pip install --upgrade pip maturin sphinx sphinx-rtd-theme
    - source env/bin/activate && maturin develop --release --extras=test,docs
    - cd aisdb_web && npm install
    - source ../env/bin/activate && /bin/bash ./build_website.sh
    - cd ..
  cache:
    key: persistent_000
    paths:
      - ./env
      - ./data_dir
  artifacts:
    paths:
      - ./aisdb_web/

tag:
  stage: publish
  only:
    - master
  dependencies:
    - pkgbuild
    - build-website
  script: 
    - zip aisdb_web.zip aisdb_web/*
    - git config --global --add safe.directory `pwd`
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - TAG=`cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"`
    - git tag "$TAG" || echo "was tagged already!"
    - git push --tags https://root:$ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
    - ls -lash target/wheels/
    #- source env/bin/activate && maturin upload --repository --username "$MATURIN_USERNAME" --password "$MATURIN_PASSWORD"
  release:
    variables:
      VERSION: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
    rules:
      if: $(git ls-remote --tags --quiet | grep $VERSION) == ""
    tag_name: $VERSION
    description: $VERSION
    assets:
      links:
        - name: "aisdb_web.zip"
          url: "https://$CI_SERVER_HOST/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/download"
          filepath: aisdb_web.zip
          link_type: package
        - name: "linux x86_64 python3.10"
          url: "https://$CI_SERVER_HOST/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/download"
          filepath: ./target/wheels/aisdb-$VERSION-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          link_type: package
        - name: "linux x86_64 python3.9"
          url: "https://$CI_SERVER_HOST/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/download"
          filepath: ./target/wheels/aisdb-$VERSION-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          link_type: package
        - name: "linux x86_64 python3.8"
          url: "https://$CI_SERVER_HOST/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/download"
          filepath: ./target/wheels/aisdb-$VERSION-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          link_type: package


variables:
  ACCESS_TOKEN: $ACCESS_TOKEN
  CI_SERVER_HOST: $CI_SERVER_HOST
  CI_PROJECT_PATH: $CI_PROJECT_PATH
  GITLAB_USER_NAME: $GITLAB_USER_NAME
  GITLAB_USER_EMAIL: $GITLAB_USER_EMAIL

