image: meridiancfi/aisdb-manylinux:latest


workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always


stages:
  - python-test
  #- build-website
  - publish


#build-website:
#  stage: build-website
#  only: 
#    - master
#  script:
#    - cd aisdb_web && npm install
#    - /bin/bash ./build_website.sh


python-test:
  stage: python-test
  variables:
    VIRTUAL_ENV: "/home/ais_env/env"
    AISDBDATADIR: "data_dir"
  before_script:
    - export PATH="/env_aisdb/bin/:$PATH"
  script:
    - mkdir -p data_dir testdata
    - cargo test --color=always --release --lib --manifest-path=./aisdb_lib/Cargo.toml
    - VIRTUAL_ENV="/env_aisdb/" maturin develop --release --extras=test --strip
    - /env_aisdb/bin/python -m pytest aisdb/tests/ --durations=5 -k 'not ShoreDist and not PortDist and not bathy and not raster and not marinetraffic and not postgres and not network_graph'
    - python docker/coverage_ci.py
  #coverage: '/TOTAL.*\s+(\d+\%)/'
  coverage: '/COVERAGE:.*\s+(\d+\%)/'


tag:
  stage: publish
  only:
    refs:
      - master
    changes:
      - "pyproject.toml"
      - ".gitlab-ci.yml"
  release:
    tag_name: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
    description: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
  script:
    - echo 'tagging release...'

variables:
  ACCESS_TOKEN: $ACCESS_TOKEN
  CI_SERVER_URL: $CI_SERVER_URL
  CI_PROJECT_PATH: $CI_PROJECT_PATH
  GITLAB_USER_NAME: $GITLAB_USER_NAME
  GITLAB_USER_EMAIL: $GITLAB_USER_EMAIL

