image: meridiancfi/aisdb:latest


workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always


stages:
  - rust-test
  - build-website
  - python-test
  #- pkgbuild
  - publish


rust-test:
  stage: rust-test
  script:
    - mkdir -p testdata 
    - cargo test --color=always --release --lib


build-website:
  stage: build-website
  only: 
    - master
  script:
    - cd aisdb_web && npm install
    - /bin/bash ./build_website.sh
    - cd ..


python-test:
  stage: python-test
  variables:
    VIRTUAL_ENV: "/home/ais_env/env"
    AISDBDATADIR: "data_dir"
  before_script:
    - export PATH="/home/ais_env/env/bin:$PATH"
  script:
    - mkdir -p data_dir
    - maturin develop --release --extras=test --strip
    - python -m pytest aisdb/tests/ --durations=5 -k 'not ShoreDist and not PortDist and not graph and not timing and not bathy and not raster and not retrieve_marinetraffic_data'
  coverage: '/TOTAL.*\s+(\d+\%)/'


#pkgbuild:
#  image: 
#    name: ghcr.io/pyo3/maturin:main
#    entrypoint: [""]
#  #stage: pkgbuild
#  #dependencies:
#    #- rust-test
#    #- python-test
#  script:
#    - maturin build --release --manylinux 2014 --strip --interpreter 3.8 3.9 3.10
#  artifacts:
#    paths:
#      - ./target/wheels/


tag:
  stage: publish
  only:
    refs:
      - master
    changes:
      - "pyproject.toml"
      - ".gitlab-ci.yml"
  release:
    tag_name: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
    description: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
  script:
    - echo 'tagging release...'

variables:
  ACCESS_TOKEN: $ACCESS_TOKEN
  CI_SERVER_URL: $CI_SERVER_URL
  CI_PROJECT_PATH: $CI_PROJECT_PATH
  GITLAB_USER_NAME: $GITLAB_USER_NAME
  GITLAB_USER_EMAIL: $GITLAB_USER_EMAIL

