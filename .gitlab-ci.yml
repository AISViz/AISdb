image: 
  name: meridiancfi/aisdb-manylinux:latest
  entrypoint: [""]



workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always


stages:
  - python-test
  #- build-website
  - publish


#build-website:
#  stage: build-website
#  only: 
#    - master
#  script:
#    - cd aisdb_web && npm install
#    - /bin/bash ./build_website.sh


python-test:
  stage: python-test
  variables:
    #VIRTUAL_ENV: "/home/ais_env/env"
    AISDBDATADIR: "data_dir"
    AISDBTESTDIR: "testdata"
    VIRTUAL_ENV: "/env_aisdb"
    CARGO_REGISTRIES_CRATES_IO_PROTOCOL: "sparse"
  #before_script:
  #  - export PATH="/env_aisdb/bin/:$PATH"
  script:
    - mkdir -p data_dir testdata
    #- python -c 'import os; os.makedirs("data_dir", exist_ok=True); os.makedirs("testdata", exist_ok=True)'
    #- cargo test --color=always --release --lib --manifest-path=./aisdb_lib/Cargo.toml
    - maturin develop --release --extras=test --strip
    - /env_aisdb/bin/python -m pytest aisdb/tests/ --durations=5 -k 'not ShoreDist and not PortDist and not bathy and not raster and not marinetraffic and not postgres and not network_graph'
    #- python -I -u -m pytest --durations=10 -k 'not ShoreDist and not PortDist and not bathy and not raster and not marinetraffic and not postgres and not network_graph' --doctest-modules --pyargs aisdb
    - python docker/coverage_ci.py
  #coverage: '/TOTAL.*\s+(\d+\%)/'
  #artifacts:
  #  paths:
  #    - /aisdb_src/target/wheels/*
  #  expire_in: 4 weeks
  coverage: '/COVERAGE:.*\s+(\d+\%)/'


tag:
  stage: publish
  only:
    refs:
      - master
    changes:
      - "pyproject.toml"
      - ".gitlab-ci.yml"
  before_script:
    - curl --location --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
  script: 
    - echo 'tagging release...'
  release:
    tag_name: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
    description: $(cat pyproject.toml | grep version | grep -Eo --color=no "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
  #rules:
  #  - if: $CI_COMMIT_TAG
  #    when: always


variables:
  ACCESS_TOKEN: $ACCESS_TOKEN
  CI_SERVER_URL: $CI_SERVER_URL
  CI_PROJECT_PATH: $CI_PROJECT_PATH
  GITLAB_USER_NAME: $GITLAB_USER_NAME
  GITLAB_USER_EMAIL: $GITLAB_USER_EMAIL

